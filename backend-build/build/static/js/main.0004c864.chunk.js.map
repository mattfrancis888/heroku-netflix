{"version":3,"sources":["actions/types.tsx","browserHistory.tsx","components/Header.tsx","components/SignInForm.tsx","reducers/authReducer.tsx","reducers/mediasReducer.tsx","reducers/errorReducer.tsx","reducers/mediaGenreAndCastReducer.tsx","reducers/watchingReducer.tsx","reducers/searchReducer.tsx","reducers/index.tsx","Root.tsx","actions/axiosConfig.tsx","actions/auth.tsx","constants.ts","actions/media.tsx","components/SignIn.tsx","components/Register.tsx","components/EmailAndPasswordForm.tsx","components/PlanHeader.tsx","components/RegisterPlan.tsx","windowDimensions.tsx","components/MediaContent.tsx","components/MediaCarousel.tsx","components/NetflixOriginalCarousel.tsx","components/Modal.tsx","components/requireAuth.tsx","components/Loading.tsx","components/Browse.tsx","components/Search.tsx","components/Searchbar.tsx","components/BrowseHeader.tsx","components/NotFound.tsx","components/Routes.tsx","components/App.tsx","index.tsx"],"names":["ActionTypes","createBrowserHistory","Header","props","className","data-testid","viewBox","focusable","onClick","history","push","id","d","renderError","error","touched","renderTextInput","input","label","meta","placeholder","autoComplete","renderPasswordInput","type","connect","state","authStatus","errorMessage","reduxForm","form","validate","formValues","errors","email","password","Fragment","onSubmit","handleSubmit","dispatch","Field","name","component","AUTH_STATE","authenticated","authReducer","action","AUTH_USER","payload","token","AUTH_ERROR","mediaReducer","FETCH_MEDIAS","data","erorrReducer","MEDIA_ERROR","mediaGenreAndCastReducer","FETCH_MEDIA_GENRE_AND_CAST","watchingReducer","FETCH_MEDIA_WATCHING_BY_USER","INSERT_MEDIA_WATCHING_BY_USER","REMOVE_MEDIA_WATCHING_BY_USER","searchReducer","FETCH_MEDIAS_BY_KEYWORD","combineReducers","medias","mediasReducer","watching","errorReducer","mediaGenreAndCast","search","formReducer","store","createStore","reducers","Cookies","get","composeWithDevTools","applyMiddleware","reduxThunk","provider","initialState","children","axiosConfig","axios","create","withCredentials","interceptors","request","use","config","Promise","reject","response","originalRequest","status","_retry","post","then","res","validateToken","url","catch","signUp","a","auth","signOut","alert","path","retriedCalling","SERVER_ERROR_MESSAGE","MED_SCREEN_SIZE","fetchMediaGenreAndCast","mediaId","insertMediaWatchingByUser","fetchMediasByKeyword","queryPath","signIn","onSubmitSignIn","useEffect","document","body","style","background","src","srcSet","alt","autoPlay","playsInline","muted","loop","placeHolder","useState","step1ButtonClicked","setStep1ButtonClicked","basic","standard","premium","planValues","setPlanValues","onSubmitRegister","console","log","PlanHeader","display","EmailAndPasswordForm","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","MediaContent","index","onLoad","anime","targets","opacity","value","duration","easing","content","banner_image","onMediaClick","media_id","modalShow","onRemoveClick","MediaCarousel","useHistory","setStyle","onMouseEnter","e","onMouseLeave","naturalSlideWidth","naturalSlideHeight","totalSlides","length","visibleSlides","infinite","step","map","carouselImages","NetflixOriginalCarousel","Modal","ReactDOM","createPortal","onDismiss","stopPropagation","title","querySelector","hoc","ChildComponent","ComposedComponent","this","shouldNavigateAway","location","pathname","Component","Loading","color","timeout","avengersBannerData","media_title","media_date","media_description","banner_title_image","name_tokens","media_type_name","fetchMedias","fetchMediaWatchingByUser","removeMediaWatchingByUser","delete","requireAuth","showModal","setShowModal","showModalContent","setShowModalContent","bannerHeightAuto","setBannerHeightAuto","addToWatching","clickedMediaId","removeFromWatching","clickedMedia","modalOnCancel","scale","setTimeout","renderModalContent","Number","isInteger","renderGenreAndCast","casts","actor","actor_first_name","actor_last_name","genres","genre","genre_name","movies","_","filter","moviesContentSplit","chunk","netflixOrig","netflixOrigSplit","tvShows","tvShowsSplit","renderMedias","errorOrNoResult","setErrorOrNoResult","useLocation","queryValues","queryString","parse","q","searchBarInputRef","useRef","searchIconFirstClick","setSearchIconFirstClick","searchTerm","setSearchTerm","delayDebounceFn","clearTimeout","current","focus","onChange","target","onKeyDown","event","key","preventDefault","ref","headerUntransparent","setHeaderUnTranspsarent","listenScrollEvent","scrollY","NotFound","inclusionArray","Routes","indexOf","exact","SignIn","Register","RegisterPlan","Browse","Search","App","listen","scrollTo","render","StrictMode","Root","getElementById"],"mappings":"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","file":"static/js/main.0004c864.chunk.js","sourcesContent":["import { AuthUserAction, AuthErrorAction } from \"../actions\";\r\n\r\nexport enum ActionTypes {\r\n    AUTH_USER,\r\n    AUTH_ERROR,\r\n    FETCH_CATEGORIES_FOR_LISTING,\r\n    FETCH_CATEGORIES_FOR_LISTING_ERROR,\r\n    FETCH_MEDIAS,\r\n    FETCH_MEDIA_GENRE_AND_CAST,\r\n    FETCH_MEDIA_WATCHING_BY_USER,\r\n    INSERT_MEDIA_WATCHING_BY_USER,\r\n    REMOVE_MEDIA_WATCHING_BY_USER,\r\n    FETCH_MEDIAS_BY_KEYWORD,\r\n    MEDIA_ERROR,\r\n}\r\nexport type AuthActions = AuthUserAction | AuthErrorAction;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import React, { useEffect } from \"react\";\r\nimport history from \"../browserHistory\";\r\nconst Header: React.FC<{}> = (props) => {\r\n    return (\r\n        <div\r\n            className=\"headerContainer\"\r\n            data-testid=\"netflixLogoForRegisterAndSignIn\"\r\n        >\r\n            <svg\r\n                viewBox=\"0 0 111 30\"\r\n                focusable=\"true\"\r\n                className=\"netflixLogo\"\r\n                onClick={() => {\r\n                    history.push(\"/\");\r\n                }}\r\n            >\r\n                <g id=\"netflix-logo\">\r\n                    <path\r\n                        d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\"\r\n                        id=\"Fill-14\"\r\n                    ></path>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ComponentType, useEffect } from \"react\";\r\nimport { Field, reduxForm, FormErrors, InjectedFormProps } from \"redux-form\";\r\n//compose is used to make it easier to \"organize\" mapStateToProps and redux form\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { SignInFormProps } from \"./SignIn\";\r\n//Re-usable component\r\nexport interface SignInFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\n//Typescriptand redux form:\r\n//https://levelup.gitconnected.com/react-js-typescript-redux-redux-form-jest-e522995ebe36\r\n\r\n//Need to hoist render methods up or else it will give error where it will unfocus after first characther is typed\r\n//https://stackoverflow.com/questions/39839051/using-redux-form-im-losing-focus-after-typing-the-first-character\r\n\r\nconst renderError = ({ error, touched }: any) => {\r\n    if (touched && error) {\r\n        //Touched (for input) will be false at first\r\n        //When clicked and then clicked otuside of the input, it will be true\r\n        return <div className=\"errorText\">{error}</div>;\r\n    }\r\n};\r\n\r\nconst renderTextInput = ({ input, label, meta, placeholder }: any) => {\r\n    //\"component\" property automatically passes props to argument, it has {input properties and meta properties}\r\n    //\"label\" automatically passes props to arguments\r\n\r\n    return (\r\n        <div>\r\n            {/* <label>{input.placeHolder}</label> */}\r\n            <input\r\n                className=\"signInTextInput\"\r\n                data-testid={label}\r\n                placeholder={placeholder}\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n    //{..input} is shortcut for redux-form; where you take all the input from \"component's\" props and pass it as\r\n    //props to <input>\r\n};\r\n\r\nconst renderPasswordInput = ({ input, label, meta, placeholder }: any) => {\r\n    return (\r\n        <div>\r\n            {/* <label>{label}</label> */}\r\n            <input\r\n                className=\"signInTextInput\"\r\n                data-testid={label}\r\n                placeholder={placeholder}\r\n                type=\"password\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SignInForm: React.FC<\r\n    SignInFormProps & InjectedFormProps<{}, SignInFormProps>\r\n> = (props) => {\r\n    const onSubmit = (formValues: any, dispatch: any) => {\r\n        props.onSubmit(formValues);\r\n        // dispatch(change(\"signInForm\", \"password\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form\r\n                className=\"authForm\"\r\n                data-testid=\"signInForm\"\r\n                onSubmit={props.handleSubmit(onSubmit)}\r\n            >\r\n                <h1 className=\"signInFormTitle\">Sign In</h1>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"signInFormFieldTitleWrap\">\r\n                        <h1>Email</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"email\"\r\n                        label=\"email\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"signInFormFieldTitleWrap\">\r\n                        <h1>Password</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"password\"\r\n                        label=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        component={renderPasswordInput}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"signInButton\" data-testid=\"signInButton\">\r\n                    Sign In\r\n                </button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst validate = (\r\n    formValues: SignInFormValues\r\n): FormErrors<SignInFormValues> => {\r\n    //MUST BE NAMED VALIDATE! Other names would be ignored by reduxForm(..)\r\n    const errors: FormErrors<SignInFormValues> = {};\r\n    //If you return an empty object, redux form will assume everything is ok\r\n    if (!formValues.email) {\r\n        //user did not enter title, so undefined\r\n        errors.email = \"You must enter an email\";\r\n        //Must be the same name as field name! The \"error\" property in {meta} would receive this\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"You must enter a password\";\r\n    }\r\n    return errors;\r\n    //Erors is going to be passed to renderInput's meta\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.errorMessage,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(\r\n    reduxForm<{}, SignInFormProps>({\r\n        form: \"signInForm\",\r\n        validate,\r\n    })(SignInForm)\r\n);\r\n","import { ActionTypes, AuthActions } from \"../actions\";\r\n\r\nexport interface AuthStateResponse {\r\n    authenticated?: string | null;\r\n    errorMessage?: string;\r\n}\r\n\r\nexport const AUTH_STATE: AuthStateResponse = {\r\n    authenticated: \"\",\r\n    errorMessage: \"\",\r\n};\r\nconst authReducer = (\r\n    state: AuthStateResponse = AUTH_STATE,\r\n    action: AuthActions\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.AUTH_USER:\r\n            return {\r\n                ...state,\r\n                authenticated: action.payload.token,\r\n                errorMessage: \"\",\r\n            };\r\n        case ActionTypes.AUTH_ERROR:\r\n            return {\r\n                ...state,\r\n                authenticated: \"\",\r\n                errorMessage: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import { ActionTypes, FetchMediasAction, FetchMediaResponse } from \"../actions\";\r\n// import {\r\n//     Media,\r\n// } from \"../actions\";\r\n\r\nexport interface MediaStateResponse {\r\n    data?: FetchMediaResponse;\r\n}\r\n\r\nconst mediaReducer = (\r\n    state: MediaStateResponse = {},\r\n    action: FetchMediasAction\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.FETCH_MEDIAS:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mediaReducer;\r\n","import { ActionTypes, ServerError, MediaErrorAction } from \"../actions\";\r\n// import {\r\n//     Media,\r\n// } from \"../actions\";\r\n\r\nexport interface ErrorStateResponse {\r\n    data?: ServerError;\r\n}\r\n\r\nconst erorrReducer = (\r\n    state: ErrorStateResponse = {},\r\n    action: MediaErrorAction\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MEDIA_ERROR:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default erorrReducer;\r\n","import {\r\n    ActionTypes,\r\n    FetchMediaGenreCastResponse,\r\n    FetchMediaGenreAndCastAction,\r\n} from \"../actions\";\r\n\r\nexport interface MediaGenreAndCastStateResponse {\r\n    data?: FetchMediaGenreCastResponse;\r\n}\r\n\r\nconst mediaGenreAndCastReducer = (\r\n    state: MediaGenreAndCastStateResponse = {},\r\n    action: FetchMediaGenreAndCastAction\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.FETCH_MEDIA_GENRE_AND_CAST:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mediaGenreAndCastReducer;\r\n","import {\r\n    ActionTypes,\r\n    FetchMediaWatchingByUserAction,\r\n    WatchingByUserResponse,\r\n    InsertMediaWatchingByUserAction,\r\n    RemovieMediaWatchingByUserAction,\r\n} from \"../actions\";\r\n\r\nexport interface WatchingStateResponse {\r\n    data?: WatchingByUserResponse;\r\n}\r\n\r\nconst watchingReducer = (\r\n    state: WatchingStateResponse = {},\r\n    action:\r\n        | FetchMediaWatchingByUserAction\r\n        | InsertMediaWatchingByUserAction\r\n        | RemovieMediaWatchingByUserAction\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.FETCH_MEDIA_WATCHING_BY_USER:\r\n            return { ...state, data: action.payload };\r\n        case ActionTypes.INSERT_MEDIA_WATCHING_BY_USER:\r\n            return { ...state, data: action.payload };\r\n        case ActionTypes.REMOVE_MEDIA_WATCHING_BY_USER:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default watchingReducer;\r\n","import {\r\n    ActionTypes,\r\n    FetchMediaResponse,\r\n    FetchMediasByKeywordAction,\r\n} from \"../actions\";\r\n// import {\r\n//     Media,\r\n// } from \"../actions\";\r\n\r\nexport interface SearchStateResponse {\r\n    data?: FetchMediaResponse;\r\n}\r\n\r\nconst searchReducer = (\r\n    state: SearchStateResponse = {},\r\n    action: FetchMediasByKeywordAction\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.FETCH_MEDIAS_BY_KEYWORD:\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer, FormStateMap } from \"redux-form\";\r\n\r\nimport authReducer, { AuthStateResponse } from \"./authReducer\";\r\nimport mediasReducer, { MediaStateResponse } from \"./mediasReducer\";\r\nimport errorReducer, { ErrorStateResponse } from \"./errorReducer\";\r\nimport mediaGenreAndCastReducer, {\r\n    MediaGenreAndCastStateResponse,\r\n} from \"./mediaGenreAndCastReducer\";\r\nimport watchingReducer, { WatchingStateResponse } from \"./watchingReducer\";\r\nimport searchReducer, { SearchStateResponse } from \"./searchReducer\";\r\nexport interface StoreState {\r\n    authStatus: AuthStateResponse;\r\n    medias: MediaStateResponse;\r\n    mediaGenreAndCast: MediaGenreAndCastStateResponse;\r\n    watching: WatchingStateResponse;\r\n    errors: ErrorStateResponse;\r\n    search: SearchStateResponse;\r\n    form: FormStateMap;\r\n}\r\nexport default combineReducers<StoreState>({\r\n    authStatus: authReducer,\r\n    medias: mediasReducer,\r\n    watching: watchingReducer,\r\n    errors: errorReducer,\r\n    mediaGenreAndCast: mediaGenreAndCastReducer,\r\n    search: searchReducer,\r\n    form: formReducer,\r\n});\r\n","//THIS FILE IS USED FOR CORE RE-USABILITY; SPECIFICALLY FOR JEST/ENZYME TESTING\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    { authStatus: { authenticated: Cookies.get(\"ACCESS_TOKEN\") } },\r\n    //if our inital state (authStauts) has a token from local storage, keep them logged in\r\n    composeWithDevTools(applyMiddleware(reduxThunk))\r\n);\r\n\r\ninterface IProps {\r\n    initialState?: {};\r\n    //Optional property so that not every file has to use initialState (initialState is used for testing)\r\n    children: any;\r\n    // any other props that come into the component\r\n}\r\nconst provider = ({ initialState = {}, children }: IProps) => {\r\n    // const store = createStore(\r\n    //     reducers,\r\n    //     { authStatus: { authenticated: Cookies.get(\"ACCESS_TOKEN\") } },\r\n    //     //if our inital state (authStauts) has a token from local storage, keep them logged in\r\n    //     composeWithDevTools(applyMiddleware(reduxThunk))\r\n    // );\r\n\r\n    return <Provider store={store}>{children}</Provider>;\r\n};\r\nexport default provider;\r\n","import axios from \"axios\";\r\n//Used for onine JSON-store database\r\nimport Cookies from \"js-cookie\";\r\nimport { store } from \"../Root\";\r\nimport { validateToken } from \"./auth\";\r\nconst ACCESS_TOKEN = \"ACCESS_TOKEN\";\r\nconst axiosConfig = axios.create({\r\n    // .. where we make our configurations\r\n    withCredentials: true, //Without it cookies will not be sent! Also, needs to be first in axios.create(..)!!\r\n    //As mentioned in:\r\n    //https://stackoverflow.com/questions/43002444/make-axios-send-cookies-in-its-requests-automatically\r\n    // baseURL: \"http://localhost:5000/\",\r\n    //baseURL: \"https://kijiji-backend.vercel.app/\",\r\n});\r\n\r\n//Followed article below for axios interceptors:\r\n//https://medium.com/swlh/handling-access-and-refresh-tokens-using-axios-interceptors-3970b601a5da\r\n\r\n//Executes before axios request\r\naxiosConfig.interceptors.request.use(\r\n    (config) => {\r\n        //Create Authorizaiton header for our axios requests\r\n        //Note: this won't affect /token because we are using the http-only cookie not authorization header :) (look at backend)\r\n        // console.log(\"INTERCEPTOR REQ\", config);\r\n        const token = Cookies.get(ACCESS_TOKEN);\r\n        //This is needed for our requireAuth hoc for protected routes.\r\n        //However, nock mock tests fails if we have req headers so I opted not to have protected routes\r\n        //to check if a token is still valid. I cannot test anything if I have this on.\r\n        // Thus, when store.dispatch calls the path below, it will always / our routes are not validated\r\n        //Flow -> Route that uses requireAuth will call validateToken action creator -> validateToken will call the\r\n        //protected routes that is setted up in the API with passport's jwtlogin\r\n        // if (token) {\r\n        //     config.headers[\"authorization\"] = token;\r\n        // }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        Promise.reject(error);\r\n    }\r\n);\r\n\r\n//Axios calls response interceptors after it sends the request and receives a response.\r\naxiosConfig.interceptors.response.use(\r\n    //If we have a response from our recent http call\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        //Catches 403 error from our axios request\r\n        // throw error; //Throw error to action creator so it can be caught\r\n        const originalRequest = error.config;\r\n\r\n        //If my refresh token is not valid then my endpoint(/token) will come with 401 status code and\r\n        // If we do not handle it then it will go in an infinite loop.\r\n        // here is my condition to stop going in an infinite loop,\r\n\r\n        //But in this project, our refresh token will not expire to make things simpler :)\r\n        // if (error.response.status === 401 && originalRequest.url === \"/token\") {\r\n        //     return Promise.reject(error);\r\n        // }\r\n        // if (error.response) {\r\n        //Above if block is used so that the app won't crash  in localhost when the backend server is not running and we are testing\r\n        //an axios request (i.e calling an axios request and seeing if a loading component triggers)\r\n        if (error.response.status === 403 && !originalRequest._retry) {\r\n            //ALL 403 errors are because of invalid tokens\r\n            originalRequest._retry = true;\r\n            axiosConfig\r\n                .post(\"/api/token\")\r\n                .then((res) => {\r\n                    //Call original request again so that we can use the new access token on the original request\r\n                    //We give the new access token by giving it at axios.interceptors.request\r\n                    //return auth(originalRequest);\r\n                    store.dispatch(\r\n                        validateToken(\r\n                            originalRequest.url,\r\n                            originalRequest._retry\r\n                        ) as any\r\n                    );\r\n\r\n                    //flow:\r\n                    //click on post-ad - > validate token in HOC ->  if post-ad with expired token -> returns 403 -> refrsh token is called\r\n                    //use ACCESS token in Authorization header (via axios interceptor response) -> trigger post-ad again with store.dispatch(validateToken(..))\r\n\r\n                    //However, nock mock tests fails if we have req headers so I opted not to have protected routes\r\n                    //to check if a token is still valid.\r\n                    // Thus, store.dispatch will fail because there is no protected routes\r\n                })\r\n                .catch((error) => {\r\n                    return Promise.reject(error);\r\n                });\r\n        }\r\n    }\r\n    // }\r\n);\r\n\r\nexport default axiosConfig;\r\n","import { ActionTypes } from \"./types\";\r\nimport auth from \"./axiosConfig\";\r\nimport { Dispatch } from \"redux\";\r\nimport history from \"../browserHistory\";\r\n\r\nexport interface JWTType {\r\n    token: string;\r\n    //our api could also return the refresh token, but it dosent matter\r\n    //I did it for signin, but it means nothing\r\n}\r\nexport interface AuthUserAction {\r\n    type: ActionTypes.AUTH_USER;\r\n    payload: JWTType;\r\n}\r\nexport interface AuthErrorAction {\r\n    type: ActionTypes.AUTH_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport const signUp = (formValues: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\"/api/signup\", formValues);\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n        history.push(\"/listings/1\");\r\n    } catch (err) {\r\n        dispatch<AuthErrorAction>({\r\n            type: ActionTypes.AUTH_ERROR,\r\n            payload: \"- Email is in use\",\r\n        });\r\n    }\r\n};\r\nexport const signIn = (formValues: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\"/api/signin\", formValues);\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n        history.push(\"/browse\");\r\n    } catch (err) {\r\n        // if (err.message === \"Network Error\") {\r\n        //     console.log(\"check error\", err);\r\n        // }\r\n\r\n        dispatch<AuthErrorAction>({\r\n            type: ActionTypes.AUTH_ERROR,\r\n            payload: \"- Invalid login credentials\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\"/api/signout\");\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n        history.push(\"/\");\r\n        // alert(\"Logged out succesfully\");\r\n    } catch (err) {\r\n        alert(\"Log out failed, try again\");\r\n    }\r\n};\r\n\r\nexport const validateToken = (path: string, retriedCalling: boolean) => async (\r\n    dispatch: Dispatch\r\n) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\r\n            path,\r\n            {}\r\n            // { headers: { Authorization: cookieService.getAccessToken() } } //assigned in axios' interceptors.request\r\n        );\r\n        //Ensures that our current access token is the newest one; if a new access token is given,\r\n        //we will update our current access token\r\n\r\n        //requireAuth HOC relies on the dispatch below\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n    } catch (err) {\r\n        if (retriedCalling === true) {\r\n            // If it fails again with the new access token (might be a forged token)\r\n            // Invalid token, kick our users out from a certain resource only accecible to signed in users\r\n            // dispatch<AuthErrorAction>({\r\n            //     type: ActionTypes.AUTH_ERROR,\r\n            //     payload: \"\",\r\n            // });\r\n\r\n            //Log them out\r\n            dispatch(signOut() as any);\r\n        }\r\n    }\r\n};\r\n","export const SERVER_ERROR_MESSAGE =\r\n    \"Uh oh...something went wrong. Check your internet connection and try again.\";\r\nexport const MED_SCREEN_SIZE = 768;\r\n","import { ActionTypes } from \"./types\";\r\nimport axios from \"./axiosConfig\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { SERVER_ERROR_MESSAGE } from \"../constants\";\r\nimport history from \"../browserHistory\";\r\n\r\nexport interface ServerError {\r\n    error: string;\r\n}\r\n\r\nexport interface FetchMediasAction {\r\n    type: ActionTypes.FETCH_MEDIAS;\r\n    payload: FetchMediaResponse;\r\n}\r\n\r\nexport interface FetchMediaGenreAndCastAction {\r\n    type: ActionTypes.FETCH_MEDIA_GENRE_AND_CAST;\r\n    payload: FetchMediaGenreCastResponse;\r\n}\r\n\r\nexport interface FetchMediaWatchingByUserAction {\r\n    type: ActionTypes.FETCH_MEDIA_WATCHING_BY_USER;\r\n    payload: WatchingByUserResponse;\r\n}\r\nexport interface InsertMediaWatchingByUserAction {\r\n    type: ActionTypes.INSERT_MEDIA_WATCHING_BY_USER;\r\n    payload: WatchingByUserResponse;\r\n}\r\nexport interface RemovieMediaWatchingByUserAction {\r\n    type: ActionTypes.REMOVE_MEDIA_WATCHING_BY_USER;\r\n    payload: WatchingByUserResponse;\r\n}\r\n\r\nexport interface FetchMediasByKeywordAction {\r\n    type: ActionTypes.FETCH_MEDIAS_BY_KEYWORD;\r\n    payload: FetchMediaResponse;\r\n}\r\n\r\nexport interface MediaErrorAction {\r\n    type: ActionTypes.MEDIA_ERROR;\r\n    payload: ServerError;\r\n}\r\n\r\nexport interface Media {\r\n    media_id: number;\r\n    media_title: string;\r\n    media_date: number;\r\n    media_description: string;\r\n    banner_title_image: string;\r\n    banner_image: string;\r\n    name_tokens: string;\r\n    media_type_name: string;\r\n}\r\n\r\nexport interface Cast {\r\n    actor_first_name: string;\r\n    actor_last_name: string;\r\n}\r\nexport interface Genre {\r\n    genre_name: string;\r\n}\r\n\r\nexport interface FetchMediaResponse {\r\n    medias: Media[];\r\n}\r\n\r\nexport interface FetchMediaGenreCastResponse {\r\n    casts: Cast[];\r\n    genres: Genre[];\r\n}\r\n\r\nexport interface WatchingByUserResponse {\r\n    watching: Media[];\r\n}\r\nexport const fetchMedias = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await axios.get<FetchMediaResponse>(`/api/medias`);\r\n        dispatch<FetchMediasAction>({\r\n            type: ActionTypes.FETCH_MEDIAS,\r\n            payload: response.data,\r\n        });\r\n    } catch (error) {\r\n        dispatch<MediaErrorAction>({\r\n            type: ActionTypes.MEDIA_ERROR,\r\n            payload: { error: SERVER_ERROR_MESSAGE },\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchMediaGenreAndCast = (mediaId: number) => async (\r\n    dispatch: Dispatch\r\n) => {\r\n    try {\r\n        const response = await axios.get<FetchMediaGenreCastResponse>(\r\n            `/api/genre-cast/${mediaId}`\r\n        );\r\n        dispatch<FetchMediaGenreAndCastAction>({\r\n            type: ActionTypes.FETCH_MEDIA_GENRE_AND_CAST,\r\n            payload: response.data,\r\n        });\r\n    } catch (error) {\r\n        dispatch<MediaErrorAction>({\r\n            type: ActionTypes.MEDIA_ERROR,\r\n            payload: { error: SERVER_ERROR_MESSAGE },\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchMediaWatchingByUser = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await axios.get<WatchingByUserResponse>(\r\n            `/api/watching`\r\n        );\r\n        dispatch<FetchMediaWatchingByUserAction>({\r\n            type: ActionTypes.FETCH_MEDIA_WATCHING_BY_USER,\r\n            payload: response.data,\r\n        });\r\n    } catch (error) {\r\n        dispatch<MediaErrorAction>({\r\n            type: ActionTypes.MEDIA_ERROR,\r\n            payload: { error: SERVER_ERROR_MESSAGE },\r\n        });\r\n    }\r\n};\r\n\r\nexport const insertMediaWatchingByUser = (mediaId: number) => async (\r\n    dispatch: Dispatch\r\n) => {\r\n    try {\r\n        const response = await axios.post<WatchingByUserResponse>(\r\n            `/api/add-to-watching/${mediaId}`\r\n        );\r\n        dispatch<InsertMediaWatchingByUserAction>({\r\n            type: ActionTypes.INSERT_MEDIA_WATCHING_BY_USER,\r\n            payload: response.data,\r\n        });\r\n    } catch (error) {\r\n        dispatch<MediaErrorAction>({\r\n            type: ActionTypes.MEDIA_ERROR,\r\n            payload: { error: SERVER_ERROR_MESSAGE },\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeMediaWatchingByUser = (mediaId: number) => async (\r\n    dispatch: Dispatch\r\n) => {\r\n    try {\r\n        const response = await axios.delete<WatchingByUserResponse>(\r\n            `/api/remove-from-watching/${mediaId}`\r\n        );\r\n        dispatch<RemovieMediaWatchingByUserAction>({\r\n            type: ActionTypes.REMOVE_MEDIA_WATCHING_BY_USER,\r\n            payload: response.data,\r\n        });\r\n    } catch (error) {\r\n        dispatch<MediaErrorAction>({\r\n            type: ActionTypes.MEDIA_ERROR,\r\n            payload: { error: SERVER_ERROR_MESSAGE },\r\n        });\r\n    }\r\n};\r\nexport const fetchMediasByKeyword = (queryPath: string) => async (\r\n    dispatch: Dispatch\r\n) => {\r\n    try {\r\n        const response = await axios.get<FetchMediaResponse>(\r\n            `/api/search?q=${queryPath}`\r\n        );\r\n        dispatch<FetchMediasByKeywordAction>({\r\n            type: ActionTypes.FETCH_MEDIAS_BY_KEYWORD,\r\n            payload: response.data,\r\n        });\r\n    } catch (error) {\r\n        dispatch<MediaErrorAction>({\r\n            type: ActionTypes.MEDIA_ERROR,\r\n            payload: { error: SERVER_ERROR_MESSAGE },\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect } from \"react\";\r\n// import netflixBgMd from \"../img/netflixBgMd.jpg\";\r\nimport Header from \"./Header\";\r\nimport SignInForm, { SignInFormValues } from \"./SignInForm\";\r\nimport history from \"../browserHistory\";\r\nimport { signIn } from \"../actions\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nexport interface SignInFormProps {\r\n    onSubmit(formValues: any): void;\r\n    authStatus?: string | null;\r\n}\r\n\r\nexport interface SignInProps {\r\n    signIn(formValues: any): void;\r\n    authStatus?: string | null;\r\n}\r\n\r\nconst SignIn: React.FC<SignInProps> = (props) => {\r\n    const onSubmitSignIn = async (formValues: SignInFormValues) => {\r\n        props.signIn(formValues);\r\n    };\r\n    useEffect(() => {\r\n        document.body.style.background = \"black\";\r\n        //If user is already logged in, they should be unable to visit this page\r\n        if (props.authStatus) {\r\n            history.push(\"/browse\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className=\"signInContainer\">\r\n                <div className=\"signInBackgroundWrap\">\r\n                    <img\r\n                        src=\"https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_small.jpg\"\r\n                        srcSet=\"https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_small.jpg 1000w, https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_medium.jpg 1500w, https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_large.jpg 1800w\"\r\n                        alt=\"\"\r\n                    ></img>\r\n                    <div className=\"signInFade\"></div>\r\n                </div>\r\n                <div className=\"signInFormContainer\" data-testid=\"signInBox\">\r\n                    <SignInForm\r\n                        onSubmit={(formValues: any) =>\r\n                            onSubmitSignIn(formValues)\r\n                        }\r\n                    />\r\n                    <div className=\"newToNetflixWrap\">\r\n                        <p className=\"newToNetflixText\">New to Netflix? </p>\r\n                        <p\r\n                            className=\"signUpNowText\"\r\n                            onClick={() => {\r\n                                history.push(\"/register\");\r\n                            }}\r\n                        >\r\n                            Sign up now\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.authenticated,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn })(SignIn);\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { signUp } from \"../actions\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../browserHistory\";\r\nexport interface RegisterProps {\r\n    authStatus?: string | null;\r\n}\r\nconst Register: React.FC<RegisterProps> = (props) => {\r\n    useEffect(() => {\r\n        document.body.style.background = \"black\";\r\n        if (props.authStatus) {\r\n            history.push(\"/browse\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n\r\n            <div className=\"registerContainer\">\r\n                <div className=\"registerBanner\">\r\n                    <div className=\"registerIntroTextAndButtonWrap\">\r\n                        <h1>Unlimited movies, TV shows, and more.</h1>\r\n                        <h3>Watch anywhere. Cancel anytime.</h3>\r\n                        <h3>\r\n                            Ready to watch? Enter your email to create or\r\n                            restart your membership.\r\n                        </h3>\r\n                        <button\r\n                            className=\"registerButton\"\r\n                            data-testid=\"registerNowButton\"\r\n                            onClick={() => {\r\n                                history.push(\"/plan\");\r\n                            }}\r\n                        >\r\n                            Register Now\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"registerBackgroundWrap\">\r\n                        <img\r\n                            src=\"https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_small.jpg\"\r\n                            srcSet=\"https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_small.jpg 1000w, https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_medium.jpg 1500w, https://assets.nflxext.com/ffe/siteui/vlv3/70deccb9-9b6c-4be1-b781-18dd1bcd9264/4b02774c-a587-43ec-b7e4-fdaf1170f261/CA-en-20210301-popsignuptwoweeks-perspective_alpha_website_large.jpg 1800w\"\r\n                            alt=\"\"\r\n                        ></img>\r\n\r\n                        <div className=\"registerFade\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"registerSectionWrap\">\r\n                    <div className=\"registerSectionTitleWrap\">\r\n                        <h1>Download your shows to watch offline.</h1>\r\n                        <h3>\r\n                            Save your favorites easily and always have something\r\n                            to watch.\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"tvContainer\">\r\n                        <img\r\n                            className=\"registerSectionImg\"\r\n                            src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/tv.png\"\r\n                            alt=\"tv\"\r\n                        ></img>\r\n\r\n                        <video\r\n                            className=\"tvVidContent\"\r\n                            autoPlay={true}\r\n                            playsInline={false}\r\n                            muted={true}\r\n                            loop={true}\r\n                        >\r\n                            <source\r\n                                src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/video-tv-0819.m4v\"\r\n                                type=\"video/mp4\"\r\n                            />\r\n                        </video>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"registerSectionWrap\">\r\n                    <div className=\"registerSectionTitleWrap\">\r\n                        <h1>Enjoy On Your Tv.</h1>\r\n                        <h3>\r\n                            Watch on Smart TVs, Playstation, Xbox, Chromecast,\r\n                            Apple TV, Blu-ray players, and more.\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"registerSectionImgWrap\">\r\n                        <img\r\n                            className=\"registerSectionImg\"\r\n                            src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/mobile-0819.jpg\"\r\n                            alt=\"tv\"\r\n                        ></img>\r\n                    </div>\r\n                    <div className=\"tvContainer\"></div>\r\n                </div>\r\n\r\n                <div className=\"registerSectionWrap\">\r\n                    <div className=\"registerSectionTitleWrap\">\r\n                        <h1>Watch everywhere.</h1>\r\n                        <h3>\r\n                            Stream unlimited movies and TV shows on your phone,\r\n                            tablet, laptop, and TV without paying more.\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"tvContainer\">\r\n                        <img\r\n                            className=\"registerSectionImg\"\r\n                            src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/device-pile.png\"\r\n                            alt=\"tv\"\r\n                        />\r\n                        <video\r\n                            className=\"watchEverywhereTVContent\"\r\n                            autoPlay={true}\r\n                            playsInline={false}\r\n                            muted={true}\r\n                            loop={true}\r\n                        >\r\n                            <source\r\n                                src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/video-devices.m4v\"\r\n                                type=\"video/mp4\"\r\n                            />\r\n                        </video>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.authenticated,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, { signUp })(Register);\r\n","import React, { ComponentType, useEffect } from \"react\";\r\nimport {\r\n    Field,\r\n    reduxForm,\r\n    reset,\r\n    change,\r\n    FormErrors,\r\n    InjectedFormProps,\r\n} from \"redux-form\";\r\n//compose is used to make it easier to \"organize\" mapStateToProps and redux form\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nimport { RegisterFormProps } from \"./RegisterPlan\";\r\n//Re-usable component\r\nexport interface EmailAndPasswordFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\n//Typescriptand redux form:\r\n//https://levelup.gitconnected.com/react-js-typescript-redux-redux-form-jest-e522995ebe36\r\n\r\n//Need to hoist render methods up or else it will give error where it will unfocus after first characther is typed\r\n//https://stackoverflow.com/questions/39839051/using-redux-form-im-losing-focus-after-typing-the-first-character\r\n\r\nconst renderError = ({ error, touched }: any) => {\r\n    if (touched && error) {\r\n        //Touched (for input) will be false at first\r\n        //When clicked and then clicked otuside of the input, it will be true\r\n        return <div className=\"errorText\">{error}</div>;\r\n    }\r\n};\r\n\r\nconst renderTextInput = ({ input, label, meta, placeHolder }: any) => {\r\n    //\"component\" property automatically passes props to argument, it has {input properties and meta properties}\r\n    //\"label\" automatically passes props to arguments\r\n    return (\r\n        <div>\r\n            {/* <label>{label}</label> */}\r\n            <input\r\n                data-testid={label}\r\n                className=\"createAuthInputs\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n    //{..input} is shortcut for redux-form; where you take all the input from \"component's\" props and pass it as\r\n    //props to <input>\r\n};\r\n\r\nconst renderPasswordInput = ({ input, label, meta, placeHolder }: any) => {\r\n    return (\r\n        <div>\r\n            {/* <label>{label}</label> */}\r\n            <input\r\n                data-testid={label}\r\n                className=\"createAuthInputs\"\r\n                type=\"password\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RegisterForm: React.FC<\r\n    RegisterFormProps & InjectedFormProps<{}, RegisterFormProps>\r\n> = (props) => {\r\n    const onSubmit = (formValues: any, dispatch: any) => {\r\n        //onSubmit's default param is any\r\n        //event.preventDefault() is automatically called with handleSubmit, a redux-form property\r\n        //form values are the values from the fields that redux-form automatiacally passes\r\n        //after clicking the submit button\r\n        //dispatch(reset(\"registerForm\"));\r\n        props.onSubmit(formValues);\r\n\r\n        //dispatch(change(\"registerForm\", \"password\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form\r\n                className=\"authForm\"\r\n                data-testid=\"registerForm\"\r\n                onSubmit={props.handleSubmit(onSubmit)}\r\n            >\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Email</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"email\"\r\n                        label=\"email\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Password</h1>\r\n                    </div>\r\n                    <Field\r\n                        name=\"password\"\r\n                        label=\"password\"\r\n                        type=\"password\"\r\n                        component={renderPasswordInput}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"authButton\"\r\n                    data-testid=\"emailAndPasswordContinueButton\"\r\n                >\r\n                    Continue\r\n                </button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst validate = (\r\n    formValues: EmailAndPasswordFormValues\r\n): FormErrors<EmailAndPasswordFormValues> => {\r\n    //MUST BE NAMED VALIDATE! Other names would be ignored by reduxForm(..)\r\n    const errors: FormErrors<EmailAndPasswordFormValues> = {};\r\n    //If you return an empty object, redux form will assume everything is ok\r\n    if (!formValues.email) {\r\n        //user did not enter title, so undefined\r\n        errors.email = \"You must enter an email\";\r\n        //Must be the same name as field name! The \"error\" property in {meta} would receive this\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"You must enter a password\";\r\n    }\r\n\r\n    return errors;\r\n    //Erors is going to be passed to renderInput's meta\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.errorMessage,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(\r\n    reduxForm<{}, RegisterFormProps>({\r\n        form: \"registerForm\",\r\n        validate,\r\n    })(RegisterForm)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport history from \"../browserHistory\";\r\nconst Header: React.FC<{}> = (props) => {\r\n    return (\r\n        <div\r\n            className=\"planHeaderContainer\"\r\n            data-testid=\"planHeaderNetflixLogo\"\r\n        >\r\n            <svg\r\n                viewBox=\"0 0 111 30\"\r\n                focusable=\"true\"\r\n                className=\"planHeaderNetflixLogo\"\r\n                onClick={() => {\r\n                    history.push(\"/\");\r\n                }}\r\n            >\r\n                <g id=\"netflix-logo\">\r\n                    <path\r\n                        d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\"\r\n                        id=\"Fill-14\"\r\n                    ></path>\r\n                </g>\r\n            </svg>\r\n            <h1 onClick={() => history.push(\"/\")}>Sign In</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport EmailAndPasswordForm from \"./EmailAndPasswordForm\";\r\nimport { EmailAndPasswordFormValues } from \"./EmailAndPasswordForm\";\r\nimport PlanHeader from \"./PlanHeader\";\r\nimport { BsCheck } from \"react-icons/bs\";\r\nimport history from \"../browserHistory\";\r\nimport { signUp } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { StoreState } from \"../reducers\";\r\nexport interface RegisterFormProps {\r\n    onSubmit(formValues: any): void;\r\n    authStatus?: string | null;\r\n}\r\n\r\nexport interface RegisterPlanProps {\r\n    signUp(formValues: any): void;\r\n    authStatus?: string | null;\r\n}\r\n\r\nconst RegisterPlan: React.FC<RegisterPlanProps> = (props) => {\r\n    const [step1ButtonClicked, setStep1ButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.body.style.background = \"white\";\r\n        if (props.authStatus) {\r\n            history.push(\"/browse\");\r\n        }\r\n    }, []);\r\n\r\n    const [planValues, setPlanValues] = useState({\r\n        basic: true,\r\n        standard: false,\r\n        premium: false,\r\n    });\r\n\r\n    const onSubmitRegister = async (formValues: EmailAndPasswordFormValues) => {\r\n        props.signUp(formValues);\r\n        if (props.authStatus) {\r\n            console.log(props.authStatus);\r\n            setStep1ButtonClicked(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <PlanHeader />\r\n            <div className=\"registerPlanContainer\">\r\n                <div\r\n                    className=\"registerPlanStepWrap\"\r\n                    style={step1ButtonClicked ? { display: \"none\" } : {}}\r\n                >\r\n                    <p data-testid=\"step1\">Step 1 of 2 </p>\r\n                    <h1 className=\"planTitle\">Welcome back!</h1>\r\n                    <h1 className=\"planTitle\">Joining Netflix is easy.</h1>\r\n                    <h3>\r\n                        Enter your password and you'll be watching in no time.\r\n                    </h3>\r\n                    <EmailAndPasswordForm\r\n                        onSubmit={(formValues: any) =>\r\n                            onSubmitRegister(formValues)\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className={\r\n                        step1ButtonClicked\r\n                            ? \"monthlyPlanContainer\"\r\n                            : \"hideMonthlyPlanContainer\"\r\n                    }\r\n                >\r\n                    <div className=\"registerMonthlyPlanTextWrap\">\r\n                        <p data-testid=\"step2\">Step 2 of 2 </p>\r\n                        <ul>\r\n                            <li>\r\n                                <BsCheck className=\"checkMark\" /> Watch all you\r\n                                want. Ad-free.\r\n                            </li>\r\n                            <li>\r\n                                <BsCheck className=\"checkMark\" />{\" \"}\r\n                                Recommendations just for you.\r\n                            </li>\r\n                            <li>\r\n                                <BsCheck className=\"checkMark\" /> Change or\r\n                                cancel your plan anytime.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <table data-testid=\"monthlyPlanTable\">\r\n                        <tbody>\r\n                            <tr className=\"monthlyRowPlanWrap\">\r\n                                <td\r\n                                    className={\r\n                                        planValues.basic\r\n                                            ? \"selectedPlan\"\r\n                                            : \"unselectedPlan\"\r\n                                    }\r\n                                    onClick={() => {\r\n                                        setPlanValues({\r\n                                            basic: true,\r\n                                            standard: false,\r\n                                            premium: false,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Basic\r\n                                    <div\r\n                                        className={\r\n                                            planValues.basic\r\n                                                ? \"arrowDown\"\r\n                                                : \"hideArrow\"\r\n                                        }\r\n                                    ></div>\r\n                                </td>\r\n\r\n                                <td\r\n                                    className={\r\n                                        planValues.standard\r\n                                            ? \"selectedPlan\"\r\n                                            : \"unselectedPlan\"\r\n                                    }\r\n                                    onClick={() => {\r\n                                        setPlanValues({\r\n                                            basic: false,\r\n                                            standard: true,\r\n                                            premium: false,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Standard\r\n                                    <div\r\n                                        className={\r\n                                            planValues.standard\r\n                                                ? \"arrowDown\"\r\n                                                : \"hideArrow\"\r\n                                        }\r\n                                    ></div>\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.premium\r\n                                            ? \"selectedPlan\"\r\n                                            : \"unselectedPlan\"\r\n                                    }\r\n                                    onClick={() => {\r\n                                        setPlanValues({\r\n                                            basic: false,\r\n                                            standard: false,\r\n                                            premium: true,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Premium\r\n                                    <div\r\n                                        className={\r\n                                            planValues.premium\r\n                                                ? \"arrowDown\"\r\n                                                : \"hideArrow\"\r\n                                        }\r\n                                    ></div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr className=\"planRowTitle\">\r\n                                <td>Monthly Price</td>\r\n                            </tr>\r\n                            <tr className=\"monthlyRowPlanWrap\">\r\n                                <td\r\n                                    className={\r\n                                        planValues.basic\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    $9.99\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.standard\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    $14.99\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.premium\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    $18.99\r\n                                </td>\r\n                            </tr>\r\n                            <tr className=\"planRowTitle\">\r\n                                <td>Quality</td>\r\n                            </tr>\r\n                            <tr className=\"monthlyRowPlanWrap\">\r\n                                <td\r\n                                    className={\r\n                                        planValues.basic\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    Good\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.standard\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    Better\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.premium\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    Best\r\n                                </td>\r\n                            </tr>\r\n                            <tr className=\"planRowTitle\">\r\n                                <td>Resolution</td>\r\n                            </tr>\r\n                            <tr className=\"monthlyRowPlanWrap\">\r\n                                <td\r\n                                    className={\r\n                                        planValues.basic\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    480p\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.standard\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    1080p\r\n                                </td>\r\n                                <td\r\n                                    className={\r\n                                        planValues.premium\r\n                                            ? \"monthlyPlanSelected\"\r\n                                            : \"monthlyPlanUnselected\"\r\n                                    }\r\n                                >\r\n                                    4k+ HDR\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button\r\n                        className=\"authButton\"\r\n                        data-testid=\"planContinueButton\"\r\n                        onClick={() => {\r\n                            history.push(\"/browse\");\r\n                        }}\r\n                    >\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.authenticated,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, { signUp })(RegisterPlan);\r\n","import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(\r\n        getWindowDimensions()\r\n    );\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n};\r\nexport default useWindowDimensions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport { AiOutlineDown, AiOutlineClose } from \"react-icons/ai\";\r\nimport { Media } from \"../actions\";\r\nimport LazyLoad from \"react-lazyload\";\r\ninterface MediaProps {\r\n    content: Media;\r\n    index: number;\r\n    onMediaClick: any;\r\n    onRemoveClick?: any;\r\n    modalShow: any;\r\n}\r\nconst MediaContent: React.FC<MediaProps> = (props) => {\r\n    return (\r\n        <LazyLoad>\r\n            <div\r\n                className={`mediaContainerCarousel mediaAnime${props.index}`}\r\n                onLoad={() => {\r\n                    anime({\r\n                        targets: `.mediaAnime${props.index}`,\r\n                        // Properties\r\n                        // Animation Parameters\r\n\r\n                        opacity: [\r\n                            {\r\n                                value: [0, 1],\r\n                                duration: 250,\r\n                                easing: \"easeOutQuad\",\r\n                            },\r\n                        ],\r\n                    });\r\n                }}\r\n            >\r\n                <img src={props.content.banner_image} alt=\"movie poster\"></img>\r\n                <div className=\"mediaOutlineDownContainer\">\r\n                    <div\r\n                        className=\"clickForWatch\"\r\n                        onClick={() =>\r\n                            props.onMediaClick(props.content.media_id)\r\n                        }\r\n                    ></div>\r\n                    <div\r\n                        className=\"outlineDownWrap \"\r\n                        onClick={() => {\r\n                            props.modalShow(props.content);\r\n                        }}\r\n                    >\r\n                        <AiOutlineDown className=\"outlineDown\" />\r\n                    </div>\r\n                    {props.onRemoveClick && (\r\n                        <AiOutlineClose\r\n                            className=\"removeWatchingIcon\"\r\n                            onClick={() => {\r\n                                props.onRemoveClick(props.content);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </LazyLoad>\r\n    );\r\n};\r\n\r\nexport default MediaContent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CarouselProvider,\r\n    Slider,\r\n    Slide,\r\n    ButtonBack,\r\n    ButtonNext,\r\n} from \"pure-react-carousel\";\r\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\r\nimport { RiArrowRightSLine, RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport { AiOutlineDown, AiOutlineClose } from \"react-icons/ai\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useWindowDimensions from \"../windowDimensions\";\r\nimport { MediaAndNetflixOriginalCarouselProps } from \"./Browse\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport { Media } from \"actions\";\r\nimport MediaContent from \"./MediaContent\";\r\nconst MediaCarousel: React.FC<MediaAndNetflixOriginalCarouselProps> = (\r\n    props\r\n) => {\r\n    const history = useHistory();\r\n    const { width } = useWindowDimensions();\r\n    const [style, setStyle] = useState({ opacity: \"1\" });\r\n\r\n    const renderSlides = () => {\r\n        return props.content.map((content: Media, index: number) => {\r\n            return (\r\n                <Slide index={index} key={content.media_id}>\r\n                    {/* <LazyLoad> \r\n                         <div\r\n                            className={`mediaContainerCarousel mediaAnime${index}`}\r\n                            onLoad={() => {\r\n                                anime({\r\n                                    targets: `.mediaAnime${index}`,\r\n                                    // Properties\r\n                                    // Animation Parameters\r\n\r\n                                    opacity: [\r\n                                        {\r\n                                            value: [0, 1],\r\n                                            duration: 250,\r\n                                            easing: \"easeOutQuad\",\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={content.banner_image}\r\n                                alt=\"movie poster\"\r\n                            ></img>\r\n                            <div className=\"mediaOutlineDownContainer\">\r\n                                <div\r\n                                    className=\"clickForWatch\"\r\n                                    onClick={() =>\r\n                                        props.onMediaClick(content.media_id)\r\n                                    }\r\n                                ></div>\r\n                                <div\r\n                                    className=\"outlineDownWrap \"\r\n                                    onClick={() => {\r\n                                        props.modalShow(content);\r\n                                    }}\r\n                                >\r\n                                    <AiOutlineDown className=\"outlineDown\" />\r\n                                </div>\r\n                                {props.onRemoveClick && (\r\n                                    <AiOutlineClose\r\n                                        className=\"removeWatchingIcon\"\r\n                                        onClick={() => {\r\n                                            props.onRemoveClick(content);\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div> \r\n                         </LazyLoad>*/}\r\n                    <MediaContent\r\n                        content={content}\r\n                        index={index}\r\n                        onMediaClick={props.onMediaClick}\r\n                        onRemoveClick={props.onRemoveClick}\r\n                        modalShow={props.modalShow}\r\n                    />\r\n                </Slide>\r\n            );\r\n        });\r\n    };\r\n\r\n    const renderCarousel = (): JSX.Element | JSX.Element[] => {\r\n        return (\r\n            <div\r\n                onMouseEnter={(e) => {\r\n                    setStyle({ opacity: \"1\" });\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                    setStyle({ opacity: \"0\" });\r\n                }}\r\n            >\r\n                <CarouselProvider\r\n                    naturalSlideWidth={100}\r\n                    naturalSlideHeight={55}\r\n                    totalSlides={props.content.length}\r\n                    className=\"mediaCarouselWrap\"\r\n                    visibleSlides={width < 900 ? 3 : 5}\r\n                    infinite={props.content.length < 3 ? false : true}\r\n                    step={3}\r\n                >\r\n                    <div className=\"sliderAndButtonWrap\">\r\n                        <Slider>{renderSlides()}</Slider>\r\n                        <ButtonBack className=\"mediaBackButton\" style={style}>\r\n                            <RiArrowLeftSLine />\r\n                        </ButtonBack>\r\n                        <ButtonNext className=\"mediaNextButton\" style={style}>\r\n                            <RiArrowRightSLine />\r\n                        </ButtonNext>\r\n                    </div>\r\n                </CarouselProvider>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return <div>{renderCarousel()}</div>;\r\n};\r\n\r\nexport default MediaCarousel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CarouselProvider,\r\n    Slider,\r\n    Slide,\r\n    ButtonBack,\r\n    ButtonNext,\r\n} from \"pure-react-carousel\";\r\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\r\nimport { RiArrowRightSLine, RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport { AiOutlineDown, AiOutlineClose } from \"react-icons/ai\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useWindowDimensions from \"../windowDimensions\";\r\nimport { MediaAndNetflixOriginalCarouselProps } from \"./Browse\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport { Media } from \"actions\";\r\n\r\n//A 'hack' it would be better to implement it into a database but for simplicty sake...\r\nconst carouselImages = [\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385556/netflix/peaky_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385555/netflix/queens_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385555/netflix/lucifer_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385555/netflix/umbrella_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385555/netflix/blackmirror_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385555/netflix/disenchantment_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385556/netflix/arrested_carousel.webp\",\r\n    \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615385556/netflix/moneyheist_carousel.webp\",\r\n];\r\nconst NetflixOriginalCarousel: React.FC<MediaAndNetflixOriginalCarouselProps> = (\r\n    props\r\n) => {\r\n    const history = useHistory();\r\n    const { width } = useWindowDimensions();\r\n    const [style, setStyle] = useState({ opacity: \"1\" });\r\n\r\n    const renderSlides = () => {\r\n        return props.content.map((content: Media, index: number) => {\r\n            return (\r\n                <Slide index={index} key={content.media_id}>\r\n                    <LazyLoad>\r\n                        <div\r\n                            className={`mediaContainerCarousel mediaAnime${index}`}\r\n                            onLoad={() => {\r\n                                anime({\r\n                                    targets: `.mediaAnime${index}`,\r\n                                    // Properties\r\n                                    // Animation Parameters\r\n\r\n                                    opacity: [\r\n                                        {\r\n                                            value: [0, 1],\r\n                                            duration: 250,\r\n                                            easing: \"easeOutQuad\",\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={\r\n                                    carouselImages[index]\r\n                                        ? carouselImages[index]\r\n                                        : \"\"\r\n                                    //content.banner_image\r\n                                }\r\n                                alt=\"carousel\"\r\n                            ></img>\r\n                            <div className=\"mediaOutlineDownContainer\">\r\n                                <div\r\n                                    className=\"clickForWatch\"\r\n                                    onClick={() =>\r\n                                        props.onMediaClick(content.media_id)\r\n                                    }\r\n                                ></div>\r\n                                <div\r\n                                    className=\"outlineDownWrap \"\r\n                                    onClick={() => {\r\n                                        props.modalShow(content);\r\n                                    }}\r\n                                >\r\n                                    <AiOutlineDown className=\"outlineDown\" />\r\n                                </div>\r\n                                {props.onRemoveClick && (\r\n                                    <AiOutlineClose\r\n                                        className=\"removeWatchingIcon\"\r\n                                        onClick={() => {\r\n                                            props.onRemoveClick(content);\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </LazyLoad>\r\n                </Slide>\r\n            );\r\n        });\r\n    };\r\n    const renderCarousel = (): JSX.Element | JSX.Element[] => {\r\n        return (\r\n            <div\r\n                onMouseEnter={(e) => {\r\n                    setStyle({ opacity: \"1\" });\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                    setStyle({ opacity: \"0\" });\r\n                }}\r\n            >\r\n                <CarouselProvider\r\n                    naturalSlideWidth={100}\r\n                    naturalSlideHeight={200}\r\n                    totalSlides={8}\r\n                    className=\"mediaCarouselWrap\"\r\n                    visibleSlides={width < 900 ? 3 : 5}\r\n                    infinite={true}\r\n                >\r\n                    <div className=\"sliderAndButtonWrap\">\r\n                        <Slider>{renderSlides()}</Slider>\r\n                        <ButtonBack className=\"mediaBackButton\" style={style}>\r\n                            <RiArrowLeftSLine />\r\n                        </ButtonBack>\r\n                        <ButtonNext className=\"mediaNextButton\" style={style}>\r\n                            <RiArrowRightSLine />\r\n                        </ButtonNext>\r\n                    </div>\r\n                </CarouselProvider>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return <div>{renderCarousel()}</div>;\r\n};\r\n\r\nexport default NetflixOriginalCarousel;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ModalProps } from \"./Browse\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n//We use portals + modals instead of directly creating a component and use it\r\n//inside the component tree structure because if a parent component\r\n//uses position:relative; the z-index of all the child's component\r\n// will be whatever the z-index of the parent component is; whhich can\r\n//cause layout issues\r\n\r\nconst Modal: React.FC<ModalProps> = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"modal\">\r\n            <div\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                }}\r\n                className=\"modalBox\"\r\n            >\r\n                <AiOutlineClose\r\n                    className=\"modalCloseIcon\"\r\n                    onClick={props.onDismiss}\r\n                />\r\n                <h2>{props.title}</h2>\r\n                {props.content}\r\n                {/*{props.actions} */}\r\n            </div>\r\n        </div>,\r\n        //@ts-ignore\r\n        document.querySelector(\"#modal\")\r\n    );\r\n};\r\n//When you click outside of the modal; histoyr.push() will be triggered.\r\n//When clicking the modal box, history.push(\"/\") will be triggered. But with\r\n//e.stopProgataion(), we don't let the children bubble up to history.push()\r\n//thus, we can now click the modal box without triggering history.push()\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { History } from \"history\";\r\nimport { validateToken } from \"../actions\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport history from \"../browserHistory\";\r\n\r\nexport interface IHoc {\r\n    authStatus?: string | null;\r\n    history: History;\r\n    validateToken(path: string, retriedCalling: boolean): void;\r\n}\r\n\r\nconst hoc = (ChildComponent: any) => {\r\n    class ComposedComponent extends Component<IHoc> {\r\n        // Our component just got rendered\r\n        //Check for redux store's authStatus\r\n        componentDidMount() {\r\n            this.shouldNavigateAway();\r\n        }\r\n\r\n        // Our component just got updated\r\n        //If our redux store's authStatus changes\r\n        componentDidUpdate() {\r\n            this.shouldNavigateAway();\r\n        }\r\n\r\n        shouldNavigateAway() {\r\n            if (!this.props.authStatus) {\r\n                //if authStatus is empty string\r\n                //history is automatically passed due to React-router\r\n                //If done loading\r\n                this.props.history.push(\"/\");\r\n            } else {\r\n                //When user enter a page,\r\n                //validate access token, if it's not valid, redux's authStatus would be empty\r\n\r\n                this.props.validateToken(history.location.pathname, false);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <ChildComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state: StoreState) {\r\n        return {\r\n            authStatus: state.authStatus.authenticated,\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps, { validateToken })(ComposedComponent);\r\n};\r\n\r\nexport default hoc;\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport useWindowDimensions from \"../windowDimensions\";\r\nimport { MED_SCREEN_SIZE } from \"../constants\";\r\nconst Loading = (): JSX.Element => {\r\n    const { width } = useWindowDimensions();\r\n    return (\r\n        <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"white\"\r\n            height={width < MED_SCREEN_SIZE ? 50 : 75}\r\n            width={width < MED_SCREEN_SIZE ? 50 : 75}\r\n            timeout={3000} //3 secs\r\n        />\r\n    );\r\n};\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport history from \"../browserHistory\";\r\nimport MediaCarousel from \"./MediaCarousel\";\r\nimport NetflixOriginalCarousel from \"./NetflixOriginalCarousel\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport Modal from \"./Modal\";\r\nimport requireAuth from \"./requireAuth\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport {\r\n    fetchMedias,\r\n    Media,\r\n    fetchMediaGenreAndCast,\r\n    fetchMediaWatchingByUser,\r\n    insertMediaWatchingByUser,\r\n    removeMediaWatchingByUser,\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { MediaStateResponse } from \"../reducers/mediasReducer\";\r\nimport Loading from \"./Loading\";\r\nimport { ErrorStateResponse } from \"reducers/errorReducer\";\r\nimport _ from \"lodash\";\r\nimport { MediaGenreAndCastStateResponse } from \"reducers/mediaGenreAndCastReducer\";\r\nimport { WatchingStateResponse } from \"reducers/watchingReducer\";\r\nimport useWindowDimensions from \"../windowDimensions\";\r\nimport { MED_SCREEN_SIZE } from \"../constants\";\r\n\r\nconst avengersBannerData = {\r\n    media_id: 12,\r\n    media_title: \"Avengers: Infinity War\",\r\n    media_date: 2018,\r\n    media_description:\r\n        \"An all-star lineup of superheroes -- including Iron Man, the Incredible Hulk and Captain America -- team up to save the world from certain doom.\",\r\n    banner_title_image:\r\n        \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615345142/netflix/logo/avengers_logo.webp\",\r\n    banner_image:\r\n        \"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615384076/netflix/avengers_infinity.webp\",\r\n    name_tokens: \"'aveng':1 'infin':2 'war':3\",\r\n    media_type_name: \"Movie\",\r\n};\r\n\r\nexport interface ModalProps {\r\n    onDismiss(): void;\r\n    title?: string;\r\n    content?: JSX.Element;\r\n    actions?: JSX.Element;\r\n}\r\n\r\nexport interface MediaAndNetflixOriginalCarouselProps {\r\n    modalShow: any;\r\n    content: Media[];\r\n    onMediaClick: any;\r\n    onRemoveClick?: any;\r\n    // content: any;\r\n}\r\n\r\ninterface BrowseProps {\r\n    medias: MediaStateResponse;\r\n    mediaGenreAndCast: MediaGenreAndCastStateResponse;\r\n    watching: WatchingStateResponse;\r\n    errors: ErrorStateResponse;\r\n    fetchMedias(): void;\r\n    fetchMediaGenreAndCast(mediaId: number): void;\r\n    fetchMediaWatchingByUser(): void;\r\n    insertMediaWatchingByUser(mediaId: number): void;\r\n    removeMediaWatchingByUser(mediaId: number): void;\r\n}\r\n\r\nconst Browse: React.FC<BrowseProps> = (props) => {\r\n    const { width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        document.body.style.background = \"black\";\r\n        props.fetchMedias();\r\n        props.fetchMediaWatchingByUser();\r\n    }, []);\r\n\r\n    useEffect(() => {}, []);\r\n\r\n    const renderMedias = () => {\r\n        if (props.errors.data?.error) {\r\n            return (\r\n                <div className=\"serverErrorContainer\">\r\n                    <h3 className=\"serverErrorText\">\r\n                        {props.errors.data?.error}\r\n                    </h3>\r\n                </div>\r\n            );\r\n        } else if (props.medias.data?.medias && props.watching.data?.watching) {\r\n            let movies = _.filter(props.medias.data?.medias, {\r\n                media_type_name: \"Movie\",\r\n            });\r\n            let moviesContentSplit = _.chunk(movies, 8);\r\n\r\n            let netflixOrig = _.filter(props.medias.data?.medias, {\r\n                media_type_name: \"Netflix Original\",\r\n            });\r\n            let netflixOrigSplit = _.chunk(netflixOrig, 8);\r\n\r\n            let tvShows = _.filter(props.medias.data?.medias, {\r\n                media_type_name: \"TV\",\r\n            });\r\n            let tvShowsSplit = _.chunk(tvShows, 8);\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <div\r\n                        className={\r\n                            props.watching.data?.watching.length > 0\r\n                                ? \"continueWatchingShow\"\r\n                                : \"continueWatchingHide\"\r\n                        }\r\n                    >\r\n                        <h3 className=\"carouselTitle\">Continue Watching</h3>\r\n                        <MediaCarousel\r\n                            content={props.watching.data?.watching}\r\n                            modalShow={modalShow}\r\n                            onMediaClick={addToWatching}\r\n                            onRemoveClick={removeFromWatching}\r\n                        />\r\n                    </div>\r\n\r\n                    <h3 className=\"carouselTitle\">Popular On Netflix</h3>\r\n                    <MediaCarousel\r\n                        onMediaClick={addToWatching}\r\n                        content={moviesContentSplit[0]}\r\n                        modalShow={modalShow}\r\n                    />\r\n                    <h3 className=\"carouselTitle\">Movies Loved By Many</h3>\r\n                    <MediaCarousel\r\n                        onMediaClick={addToWatching}\r\n                        content={moviesContentSplit[1]}\r\n                        modalShow={modalShow}\r\n                    />\r\n\r\n                    <h3 className=\"carouselTitle\">Netflix Originals</h3>\r\n                    <NetflixOriginalCarousel\r\n                        onMediaClick={addToWatching}\r\n                        content={netflixOrigSplit[0]}\r\n                        modalShow={modalShow}\r\n                    />\r\n\r\n                    <h3 className=\"carouselTitle\">TV Shows</h3>\r\n                    <MediaCarousel\r\n                        onMediaClick={addToWatching}\r\n                        content={tvShowsSplit[0]}\r\n                        modalShow={modalShow}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        } else if (!props.medias.data && !props.watching.data) {\r\n            return (\r\n                <div className=\"loadingCenter\">\r\n                    <Loading />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        //This block would appear in testing\r\n        else if (props.medias.data?.medias) {\r\n            return (\r\n                <div>\r\n                    <p>{props.medias.data?.medias[0].media_title}</p>\r\n                    {/* <p>{props.watching.data?.watching[0].media_title}</p> */}\r\n                </div>\r\n            );\r\n        }\r\n        //This block will not appear in testing,  I believe it's because the API tries to read the cookie\r\n        // } else if (props.watching.data?.watching) {\r\n        //     return (\r\n        //         <div>\r\n        //             <p>Hi</p>\r\n        //             {/* <p>{props.watching.data?.watching[0].media_title}</p> */}\r\n        //         </div>\r\n        //     );\r\n        // }\r\n    };\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showModalContent, setShowModalContent] = useState<Media | null>(\r\n        null\r\n    );\r\n    const [bannerHeightAuto, setBannerHeightAuto] = useState(false);\r\n\r\n    const addToWatching = (clickedMediaId: number) => {\r\n        try {\r\n            props.insertMediaWatchingByUser(clickedMediaId);\r\n            alert(\r\n                `Let's pretend that you are watching your show / movie! It's now added to 'Continue Watching' on the top of the page. You can remove it from 'Currently Watching' by hovering over it.`\r\n            );\r\n        } catch {\r\n            // alert(\"Error\");\r\n        }\r\n    };\r\n\r\n    const removeFromWatching = (clickedMedia: Media) => {\r\n        try {\r\n            props.removeMediaWatchingByUser(clickedMedia.media_id);\r\n            // alert(\"Success\");\r\n        } catch {\r\n            // alert(\"Error\");\r\n        }\r\n    };\r\n\r\n    const modalShow = (clickedMedia: Media) => {\r\n        setShowModal(true);\r\n        setShowModalContent({ ...clickedMedia });\r\n        props.fetchMediaGenreAndCast(clickedMedia.media_id);\r\n    };\r\n    const modalOnCancel = () => {\r\n        anime({\r\n            targets: \".modalBox\",\r\n            // Properties\r\n            // Animation Parameters\r\n            width: \"0%\",\r\n            scale: [1, 0],\r\n            duration: 450,\r\n\r\n            easing: \"easeOutQuad\",\r\n        });\r\n        anime({\r\n            targets: \".modalTextSection\",\r\n            // Properties\r\n            // Animation Parameters\r\n            width: \"0%\",\r\n            duration: 10,\r\n\r\n            easing: \"easeOutQuad\",\r\n        });\r\n        setTimeout(() => {\r\n            setShowModal(false);\r\n        }, 450);\r\n    };\r\n    const renderModal = () => {\r\n        if (!showModal) return null;\r\n        else {\r\n            return (\r\n                <Modal\r\n                    content={renderModalContent()}\r\n                    onDismiss={modalOnCancel}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const renderModalContent = () => {\r\n        return (\r\n            <div\r\n                className=\"modalContentContainer\"\r\n                onLoad={() => {\r\n                    if (width < MED_SCREEN_SIZE) {\r\n                        anime({\r\n                            targets: \".modalBox\",\r\n                            // Properties\r\n                            // Animation Parameters\r\n                            width: [\"0%\", \"90%\"],\r\n                            scale: [0, 1],\r\n                            duration: 750,\r\n                            easing: \"easeOutQuad\",\r\n                        });\r\n                    } else {\r\n                        anime({\r\n                            targets: \".modalBox\",\r\n                            // Properties\r\n                            // Animation Parameters\r\n                            width: [\"0%\", \"80%\"],\r\n                            scale: [0, 1],\r\n                            duration: 750,\r\n\r\n                            easing: \"easeOutQuad\",\r\n                        });\r\n                    }\r\n                    anime({\r\n                        targets: \".modalTextSection\",\r\n                        // Properties\r\n                        // Animation Parameters\r\n\r\n                        duration: 750,\r\n                        scale: [0, 1],\r\n                        easing: \"easeOutQuad\",\r\n                    });\r\n                }}\r\n            >\r\n                <div className=\"modalBannerContainer\">\r\n                    <div className=\"modalBannerImageWrap\">\r\n                        <img src={showModalContent?.banner_image} alt=\"\"></img>\r\n\r\n                        <div className=\"modalFade\"></div>\r\n                    </div>\r\n                    <div className=\"browseBannerTitleImageAndInfoWrap\">\r\n                        <img\r\n                            src={showModalContent?.banner_title_image}\r\n                            alt=\"\"\r\n                        ></img>\r\n                        <button\r\n                            className=\"modalWatchButton\"\r\n                            onClick={() => {\r\n                                Number.isInteger(showModalContent?.media_id)\r\n                                    ? //@ts-ignore Small TS warning, too lazy to fix\r\n                                      addToWatching(showModalContent?.media_id)\r\n                                    : //   modalOnCancel();\r\n                                      alert(\r\n                                          \"Trouble adding your movie to your watch list...\"\r\n                                      );\r\n                                modalOnCancel();\r\n                            }}\r\n                        >\r\n                            <FaPlay className=\"playIcon\" />\r\n                            Watch Now\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modalInfoWrap\">\r\n                    <div className=\"modalTextSection modalTextDateAndDescSection\">\r\n                        <p className=\"modalMediaDate\">\r\n                            {showModalContent?.media_date}\r\n                        </p>\r\n                        <p className=\"modalMediaDesc\">\r\n                            {showModalContent?.media_description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"modalTextSection modalTextCastAndGenreSection\">\r\n                        <div className=\"modalCastAndGenre\">\r\n                            {renderGenreAndCast()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderGenreAndCast = () => {\r\n        if (!props.mediaGenreAndCast) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"modalMediaCastWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Cast: </p>\r\n                        <p>Loading</p>\r\n                    </div>\r\n                    <div className=\"modalMediaGenreWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Genres: </p>\r\n                        <p>Loading</p>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"modalMediaCastWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Cast: </p>\r\n                        <p>\r\n                            {props.mediaGenreAndCast.data?.casts.map(\r\n                                (actor, index) => {\r\n                                    return ` ${actor.actor_first_name}  ${actor.actor_last_name},`;\r\n                                }\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"modalMediaGenreWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Genres: </p>\r\n                        <p>\r\n                            {props.mediaGenreAndCast.data?.genres.map(\r\n                                (genre, index) => {\r\n                                    return ` ${genre.genre_name},`;\r\n                                }\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {renderModal()}\r\n            <div className=\"browseBannerContainer\">\r\n                <div\r\n                    className={\r\n                        bannerHeightAuto\r\n                            ? `browseBannerImageWrap browseBannerImageWrapHeightAuto`\r\n                            : `browseBannerImageWrap browseBannerImageWrapTempHeight`\r\n                    }\r\n                    onLoad={() => {\r\n                        setBannerHeightAuto(true);\r\n                        anime({\r\n                            targets: \".browseBannerImageWrap\",\r\n                            // Properties\r\n                            // Animation Parameters\r\n\r\n                            opacity: [\r\n                                {\r\n                                    value: [0, 1],\r\n                                    duration: 1000,\r\n                                    easing: \"easeOutQuad\",\r\n                                },\r\n                            ],\r\n                        });\r\n                    }}\r\n                >\r\n                    <img\r\n                        src=\"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615345150/netflix/logo/avengers_banner.jpg\"\r\n                        alt=\"banner\"\r\n                    ></img>\r\n\r\n                    <div className=\"registerFade\"></div>\r\n                </div>\r\n                <div className=\"browseBannerTitleImageAndInfoWrap\">\r\n                    <img\r\n                        className=\"animeBannerTitle\"\r\n                        src=\"https://res.cloudinary.com/du8n2aa4p/image/upload/v1615345142/netflix/logo/avengers_logo.webp\"\r\n                        onLoad={() => {\r\n                            anime({\r\n                                targets: \".animeBannerTitle\",\r\n                                // Properties\r\n                                // Animation Parameters\r\n\r\n                                opacity: [\r\n                                    {\r\n                                        value: [0, 1],\r\n                                        duration: 500,\r\n                                        easing: \"easeOutQuad\",\r\n                                    },\r\n                                ],\r\n                            });\r\n                        }}\r\n                        alt=\"banner title\"\r\n                    ></img>\r\n                    <p>{avengersBannerData.media_description}</p>\r\n                    <div className=\"bannerButtonWrap\">\r\n                        <button\r\n                            className=\"bannerButton\"\r\n                            onClick={() =>\r\n                                addToWatching(avengersBannerData.media_id)\r\n                            }\r\n                        >\r\n                            <FaPlay className=\"bannerButtonIcon\" />\r\n                            Watch Now\r\n                        </button>\r\n                        <button\r\n                            className=\"bannerButton bannerButtonInfo\"\r\n                            onClick={() => {\r\n                                modalShow(avengersBannerData);\r\n                            }}\r\n                        >\r\n                            <AiOutlineInfoCircle className=\"bannerButtonIcon \" />\r\n                            More Info\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"browseContainer\">{renderMedias()}</div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        medias: state.medias,\r\n        mediaGenreAndCast: state.mediaGenreAndCast,\r\n        watching: state.watching,\r\n        errors: state.errors,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchMedias,\r\n    fetchMediaGenreAndCast,\r\n    fetchMediaWatchingByUser,\r\n    insertMediaWatchingByUser,\r\n    removeMediaWatchingByUser,\r\n})(requireAuth(Browse));\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport history from \"../browserHistory\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport Modal from \"./Modal\";\r\nimport requireAuth from \"./requireAuth\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport {\r\n    fetchMedias,\r\n    Media,\r\n    fetchMediaGenreAndCast,\r\n    insertMediaWatchingByUser,\r\n    fetchMediasByKeyword,\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { SearchStateResponse } from \"../reducers/searchReducer\";\r\nimport Loading from \"./Loading\";\r\nimport { ErrorStateResponse } from \"reducers/errorReducer\";\r\nimport _ from \"lodash\";\r\nimport { MediaGenreAndCastStateResponse } from \"reducers/mediaGenreAndCastReducer\";\r\nimport { WatchingStateResponse } from \"reducers/watchingReducer\";\r\nimport useWindowDimensions from \"../windowDimensions\";\r\nimport { MED_SCREEN_SIZE } from \"../constants\";\r\nimport MediaContent from \"./MediaContent\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface BrowseProps {\r\n    search: SearchStateResponse;\r\n    mediaGenreAndCast: MediaGenreAndCastStateResponse;\r\n    watching: WatchingStateResponse;\r\n    errors: ErrorStateResponse;\r\n    fetchMediaGenreAndCast(mediaId: number): void;\r\n    insertMediaWatchingByUser(mediaId: number): void;\r\n    fetchMediasByKeyword(searchKeyword: string): void;\r\n}\r\n\r\nexport interface SearchQueryValues {\r\n    q?: string;\r\n}\r\n\r\nconst Search: React.FC<BrowseProps> = (props) => {\r\n    const { width } = useWindowDimensions();\r\n    const [errorOrNoResult, setErrorOrNoResult] = useState(false);\r\n    //For Query Strings:\r\n    const { search } = useLocation();\r\n    const queryValues: SearchQueryValues = queryString.parse(search);\r\n    useEffect(() => {\r\n        document.body.style.background = \"black\";\r\n        if (queryValues.q) props.fetchMediasByKeyword(queryValues.q);\r\n    }, []);\r\n    useEffect(() => {\r\n        //Needed to change state when user searches for a new query or press back/forward button\r\n        if (queryValues.q) props.fetchMediasByKeyword(queryValues.q);\r\n    }, [queryValues.q]);\r\n\r\n    const renderMedias = () => {\r\n        if (props.errors.data?.error) {\r\n            if (!errorOrNoResult) setErrorOrNoResult(true);\r\n            return (\r\n                <div className=\"serverErrorContainer\">\r\n                    <h3 className=\"serverErrorText\">\r\n                        {props.errors.data?.error}\r\n                    </h3>\r\n                </div>\r\n            );\r\n        } else if (props.search.data?.medias) {\r\n            if (props.search.data?.medias.length === 0) {\r\n                if (!errorOrNoResult) setErrorOrNoResult(true);\r\n                return (\r\n                    <h1 className=\"noResultsText\">{`No results found for \"${queryValues.q}\"`}</h1>\r\n                );\r\n            }\r\n            if (errorOrNoResult) setErrorOrNoResult(false);\r\n\r\n            return (\r\n                <div>\r\n                    {props.search.data?.medias.map((content, index) => {\r\n                        return (\r\n                            <div className=\"searchResultContentWrap\">\r\n                                <MediaContent\r\n                                    key={index}\r\n                                    content={content}\r\n                                    index={index}\r\n                                    onMediaClick={addToWatching}\r\n                                    modalShow={modalShow}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            );\r\n        } else if (!props.search.data?.medias) {\r\n            if (!errorOrNoResult) setErrorOrNoResult(true);\r\n            return (\r\n                <div className=\"loadingCenter\">\r\n                    <Loading />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showModalContent, setShowModalContent] = useState<Media | null>(\r\n        null\r\n    );\r\n\r\n    const addToWatching = (clickedMediaId: number) => {\r\n        try {\r\n            props.insertMediaWatchingByUser(clickedMediaId);\r\n            alert(\r\n                `Let's pretend that you are watching your show / movie! It's now added to 'Continue Watching' on the homepage. You can remove it from 'Currently Watching' by hovering over it.`\r\n            );\r\n        } catch {\r\n            alert(\r\n                `Check your internet connection. Unable to add show / movie to your watch list.`\r\n            );\r\n        }\r\n    };\r\n\r\n    const modalShow = (clickedMedia: Media) => {\r\n        setShowModal(true);\r\n        setShowModalContent({ ...clickedMedia });\r\n        props.fetchMediaGenreAndCast(clickedMedia.media_id);\r\n    };\r\n    const modalOnCancel = () => {\r\n        anime({\r\n            targets: \".modalBox\",\r\n            // Properties\r\n            // Animation Parameters\r\n            width: \"0%\",\r\n            scale: [1, 0],\r\n            duration: 450,\r\n\r\n            easing: \"easeOutQuad\",\r\n        });\r\n        anime({\r\n            targets: \".modalTextSection\",\r\n            // Properties\r\n            // Animation Parameters\r\n            width: \"0%\",\r\n            duration: 10,\r\n\r\n            easing: \"easeOutQuad\",\r\n        });\r\n        setTimeout(() => {\r\n            setShowModal(false);\r\n        }, 450);\r\n    };\r\n    const renderModal = () => {\r\n        if (!showModal) return null;\r\n        else {\r\n            return (\r\n                <Modal\r\n                    content={renderModalContent()}\r\n                    onDismiss={modalOnCancel}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const renderModalContent = () => {\r\n        return (\r\n            <div\r\n                className=\"modalContentContainer\"\r\n                onLoad={() => {\r\n                    if (width < MED_SCREEN_SIZE) {\r\n                        anime({\r\n                            targets: \".modalBox\",\r\n                            // Properties\r\n                            // Animation Parameters\r\n                            width: [\"0%\", \"90%\"],\r\n                            scale: [0, 1],\r\n                            duration: 750,\r\n                            easing: \"easeOutQuad\",\r\n                        });\r\n                    } else {\r\n                        anime({\r\n                            targets: \".modalBox\",\r\n                            // Properties\r\n                            // Animation Parameters\r\n                            width: [\"0%\", \"80%\"],\r\n                            scale: [0, 1],\r\n                            duration: 750,\r\n\r\n                            easing: \"easeOutQuad\",\r\n                        });\r\n                    }\r\n                    anime({\r\n                        targets: \".modalTextSection\",\r\n                        // Properties\r\n                        // Animation Parameters\r\n\r\n                        duration: 750,\r\n                        scale: [0, 1],\r\n                        easing: \"easeOutQuad\",\r\n                    });\r\n                }}\r\n            >\r\n                <div className=\"modalBannerContainer\">\r\n                    <div className=\"modalBannerImageWrap\">\r\n                        <img src={showModalContent?.banner_image} alt=\"\"></img>\r\n\r\n                        <div className=\"modalFade\"></div>\r\n                    </div>\r\n                    <div className=\"browseBannerTitleImageAndInfoWrap\">\r\n                        <img\r\n                            src={showModalContent?.banner_title_image}\r\n                            alt=\"\"\r\n                        ></img>\r\n                        <button\r\n                            className=\"modalWatchButton\"\r\n                            onClick={() => {\r\n                                Number.isInteger(showModalContent?.media_id)\r\n                                    ? //@ts-ignore Small TS warning, too lazy to fix\r\n                                      addToWatching(showModalContent?.media_id)\r\n                                    : //   modalOnCancel();\r\n                                      alert(\r\n                                          \"Trouble adding your movie to your watch list...\"\r\n                                      );\r\n                                modalOnCancel();\r\n                            }}\r\n                        >\r\n                            <FaPlay className=\"playIcon\" />\r\n                            Watch Now\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modalInfoWrap\">\r\n                    <div className=\"modalTextSection modalTextDateAndDescSection\">\r\n                        <p className=\"modalMediaDate\">\r\n                            {showModalContent?.media_date}\r\n                        </p>\r\n                        <p className=\"modalMediaDesc\">\r\n                            {showModalContent?.media_description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"modalTextSection modalTextCastAndGenreSection\">\r\n                        <div className=\"modalCastAndGenre\">\r\n                            {renderGenreAndCast()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderGenreAndCast = () => {\r\n        if (!props.mediaGenreAndCast) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"modalMediaCastWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Cast: </p>\r\n                        <p>Loading</p>\r\n                    </div>\r\n                    <div className=\"modalMediaGenreWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Genres: </p>\r\n                        <p>Loading</p>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"modalMediaCastWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Cast: </p>\r\n                        <p>\r\n                            {props.mediaGenreAndCast.data?.casts.map(\r\n                                (actor, index) => {\r\n                                    return ` ${actor.actor_first_name}  ${actor.actor_last_name},`;\r\n                                }\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"modalMediaGenreWrap\">\r\n                        <p className=\"modalGreyTextInfo\">Genres: </p>\r\n                        <p>\r\n                            {props.mediaGenreAndCast.data?.genres.map(\r\n                                (genre, index) => {\r\n                                    return ` ${genre.genre_name},`;\r\n                                }\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {renderModal()}\r\n            <h1 className=\"searchedForText\">{`Searched for \"${queryValues.q}\"`}</h1>\r\n            <div\r\n                className={`searchResultContainer ${\r\n                    errorOrNoResult\r\n                        ? \"searchResultContainerErrorOrNoResult\"\r\n                        : \"\"\r\n                }`}\r\n            >\r\n                {renderMedias()}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        search: state.search,\r\n        mediaGenreAndCast: state.mediaGenreAndCast,\r\n        watching: state.watching,\r\n        errors: state.errors,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchMediaGenreAndCast,\r\n    insertMediaWatchingByUser,\r\n    fetchMediasByKeyword,\r\n})(requireAuth(Search));\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport history from \"../browserHistory\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { fetchMediasByKeyword } from \"../actions\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { StoreState } from \"../reducers\";\r\ninterface SearchbarProps {\r\n    fetchMediasByKeyword?(searchKeyword: string): void;\r\n}\r\n\r\nconst Searchbar: React.FC<SearchbarProps> = (props) => {\r\n    const searchBarInputRef = useRef<HTMLInputElement>(null);\r\n    const [searchIconFirstClick, setSearchIconFirstClick] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const delayDebounceFn = setTimeout(() => {\r\n            // Send Axios request here\r\n            if (props.fetchMediasByKeyword && searchIconFirstClick) {\r\n                // props.fetchMediasByKeyword(searchTerm);\r\n\r\n                if (searchTerm === \"\") {\r\n                    history.push(\"/browse\");\r\n                } else {\r\n                    history.push(`/search?q=${searchTerm}`);\r\n                }\r\n            }\r\n        }, 850);\r\n\r\n        return () => clearTimeout(delayDebounceFn);\r\n    }, [searchTerm]);\r\n\r\n    useEffect(() => {\r\n        anime({\r\n            targets: \".searchBarForm\",\r\n            // Properties\r\n            // Animation Parameters\r\n            width: [\"10%\", \"75%\"],\r\n            duration: 450,\r\n\r\n            easing: \"easeOutQuad\",\r\n        });\r\n    }, [searchIconFirstClick]);\r\n\r\n    const handleKeyDown = (event: any) => {\r\n        //https://stackoverflow.com/questions/31272207/to-call-onchange-event-after-pressing-enter-key\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n\r\n            if (searchTerm === \"\") {\r\n                history.push(\"/browse\");\r\n            } else {\r\n                history.push(`/search?q=${searchTerm}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form\r\n            // className={\"searchBarForm\"}\r\n            className={\r\n                !searchIconFirstClick ? \"onlyShowSearchIcon\" : \"searchBarForm\"\r\n            }\r\n        >\r\n            <AiOutlineSearch\r\n                className=\"searchBarIcons\"\r\n                data-testid=\"searchIcon\"\r\n                onClick={() => {\r\n                    // directToListingsPage();\r\n                    if (!searchIconFirstClick) {\r\n                        anime({\r\n                            targets: \".searchBarInput\",\r\n                            // Properties\r\n                            // Animation Parameters\r\n                            width: [\"0%\", \"100%\"],\r\n                            duration: 450,\r\n\r\n                            easing: \"easeOutQuad\",\r\n                        });\r\n                        searchBarInputRef.current?.focus();\r\n                    }\r\n\r\n                    setSearchIconFirstClick(true);\r\n                }}\r\n            />\r\n            <input\r\n                data-testid=\"searchBarInput\"\r\n                className=\"searchBarInput\"\r\n                type=\"search\"\r\n                placeholder=\"Search titles\"\r\n                name=\"search\"\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                onKeyDown={handleKeyDown}\r\n                autoComplete=\"off\"\r\n                ref={searchBarInputRef}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        medias: state.medias,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchMediasByKeyword })(Searchbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signOut } from \"../actions\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nimport Searchbar from \"./Searchbar\";\r\ninterface IHeader {\r\n    authStatus?: string | null;\r\n    signOut(): void;\r\n}\r\n\r\nconst BrowseHeader: React.FC<IHeader> = (props) => {\r\n    const history = useHistory();\r\n    const [headerUntransparent, setHeaderUnTranspsarent] = useState(false);\r\n\r\n    const listenScrollEvent = () => {\r\n        if (window.scrollY < 73) {\r\n            return setHeaderUnTranspsarent(false);\r\n        } else if (window.scrollY > 70) {\r\n            return setHeaderUnTranspsarent(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", listenScrollEvent);\r\n\r\n        return () => window.removeEventListener(\"scroll\", listenScrollEvent);\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                headerUntransparent\r\n                    ? \"floatBrowseHeader browseHeaderContainer browseHeaderUntransparent\"\r\n                    : \"floatBrowseHeader browseHeaderContainer browseHeaderTransparent\"\r\n            }\r\n            data-testid=\"netflixBrowseLogo\"\r\n        >\r\n            <svg\r\n                viewBox=\"0 0 111 30\"\r\n                focusable=\"true\"\r\n                className=\"netflixBrowseLogo\"\r\n                onClick={() => {\r\n                    history.push(\"/\");\r\n                }}\r\n            >\r\n                <g id=\"netflix-logo\">\r\n                    <path\r\n                        d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\"\r\n                        id=\"Fill-14\"\r\n                    ></path>\r\n                </g>\r\n            </svg>\r\n            <div className=\"searchbarAndSignOutWrap\">\r\n                <Searchbar />\r\n                <h1 data-testid=\"signOutText\" onClick={() => props.signOut()}>\r\n                    Sign Out\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.authenticated,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signOut })(BrowseHeader);\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nconst NotFound: React.FC<{}> = (props) => {\r\n    useEffect(() => {\r\n        document.body.style.background = \"black\";\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className=\"serverErrorContainer\">\r\n                <h3>The page you are looking for cannot be found.</h3>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SignIn from \"./SignIn\";\r\nimport Register from \"./Register\";\r\nimport RegisterPlan from \"./RegisterPlan\";\r\nimport Browse from \"./Browse\";\r\nimport Search from \"./Search\";\r\nimport BrowseHeader from \"./BrowseHeader\";\r\nimport NotFound from \"./NotFound\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst inclusionArray = [\"/browse\", \"/search\"];\r\n\r\nconst Routes: React.FC<{}> = () => {\r\n    // console.log(inclusionArray.indexOf(useLocation().pathname));\r\n    return (\r\n        <React.Fragment>\r\n            {inclusionArray.indexOf(useLocation().pathname) > -1 && (\r\n                <BrowseHeader />\r\n            )}\r\n            <Switch>\r\n                <Route path=\"/\" exact component={SignIn} />\r\n                <Route path=\"/register\" exact component={Register} />\r\n                <Route path=\"/plan\" exact component={RegisterPlan} />\r\n                <Route path=\"/browse\" exact component={Browse} />\r\n                <Route path=\"/search\" exact component={Search} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport history from \"../browserHistory\";\nimport Routes from \"./Routes\";\nconst App: React.FC<{}> = () => {\n    history.listen((_) => {\n        window.scrollTo(0, 0);\n    });\n    return (\n        <Router history={history}>\n            <Routes />\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./css/main.css\";\r\nimport Root from \"./Root\";\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Root>\r\n            <App />\r\n        </Root>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}